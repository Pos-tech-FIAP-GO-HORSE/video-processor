// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	service "video-processor/internal/service"
)

// NotifierInterface is an autogenerated mock type for the NotifierInterface type
type NotifierInterface struct {
	mock.Mock
}

// NotifyResult provides a mock function with given fields: event
func (_m *NotifierInterface) NotifyResult(event service.NotificationEvent) error {
	ret := _m.Called(event)

	if len(ret) == 0 {
		panic("no return value specified for NotifyResult")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(service.NotificationEvent) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewNotifierInterface creates a new instance of NotifierInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNotifierInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *NotifierInterface {
	mock := &NotifierInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
